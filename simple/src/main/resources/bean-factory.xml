<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd">

	<!--默认调用 无参构造方法 ,单例模式-->
<!--     <bean id="hello" class="simple.application.Hello" scope="single"/> -->
    <bean id="hello" class="simple.application.Hello"/>
    
    <!-- 使用有参构造方法创建 -->
    <bean id="hello1" class="simple.application.Hello">
    	
    	<constructor-arg index="0" value="有参构造方法创建,下标形式"></constructor-arg>
    	
    	<!-- 
    	<constructor-arg name="name" value="有参构造方法创建，name形式"></constructor-arg>
    	 -->
    	 
    	 <!--
    	<constructor-arg type="java.lang.String" value="有参构造方法创建，参数Type形式"></constructor-arg>
    	   -->    	
    </bean>
    
    <!-- 使用静态工厂创建 -->
    <bean id="hello2" class="simple.application.factory.HelloFactory" factory-method="getHello">
    	<constructor-arg name="name" value="使用静态工厂创建的对象"></constructor-arg>
    </bean>
    
    <!--使用动态工厂创建  ,并且为bean设置别名,name可以设置多个别名-->
    <bean id="helloDynamicFactory" class="simple.application.factory.HelloDynamicFactory"></bean>
    <bean id="hello3" name="loser,hehe" factory-bean="helloDynamicFactory" factory-method="getHello">
    	<constructor-arg name="name" value="使用动态工厂创建"></constructor-arg>
    </bean>
    
    <!--设置别名  -->
    <alias name="hello3" alias="star"/> 
    
    
    <!-- 使用LoserHello.class的方式 获取bean-->
    <bean id="loserHello" class="simple.application.LoserHello">
    	<!--使用setter方式注入所依赖的bean,根据name来找  -->
    	<property name="hello" ref="hello2"></property>
    </bean>
    
    
    
    
    
</beans>